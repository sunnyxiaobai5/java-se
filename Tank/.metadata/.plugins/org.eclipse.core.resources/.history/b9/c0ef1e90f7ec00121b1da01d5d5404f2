package com.sunny_xiaobai5.entities;

import java.awt.Graphics;
import java.awt.Image;

import com.sunny_xiaobai5.listener.TankListener;
import com.sunny_xiaobai5.util.DirTankUtil;
import com.sunny_xiaobai5.util.ResourseUtil;

public class Tank {

	public DirTankUtil direction = DirTankUtil.STOP;
	public int x, y;
	public boolean good;
	private Image image;

	private TankListener listener;

	public Tank(int x, int y, DirTankUtil direction, boolean good) {
		this.x = x;
		this.y = y;
		this.direction = direction;
		this.good = good;
		setIcon(direction);
	}

	private void setIcon(DirTankUtil direction) {
		switch (direction) {
		case UP:
			image = ResourseUtil.ico_tankU;
			break;
		case DOWN:
			image = ResourseUtil.ico_tankD;
			break;
		case LEFT:
			image = ResourseUtil.ico_tankL;
			break;
		case RIGHT:
			image = ResourseUtil.ico_tankR;
			break;
		}
	}

	public void move() {
		System.out.println("Tank's move");
		if (!this.good) {
			switch (direction) {
			case UP:
				this.y -= 5;
				break;
			case DOWN:
				this.y += 5;
				break;
			case LEFT:
				this.x -= 5;
				break;
			case RIGHT:
				this.x += 5;
				break;
			}
		}
	}

	public void changeDirection(DirTankUtil direction) {
		System.out.println("Tank's changeDirection");
		switch (direction) {
		case UP:
			this.image = ResourseUtil.ico_tankU;
			break;
		case DOWN:
			this.image = ResourseUtil.ico_tankD;
			break;
		case LEFT:
			this.image = ResourseUtil.ico_tankL;
			break;
		case RIGHT:
			this.image = ResourseUtil.ico_tankR;
			break;
		case STOP:
			this.image = ResourseUtil.ico_tankU;
			break;
		}

	}

	public void drawMe(Graphics g) {
		System.out.println("Tank's drawMe");
		g.drawImage(this.image, x, y, null);
		this.move();
	}

	public void addTankListener(TankListener l) {
		if (l != null) {
			this.listener = l;
		}
	}

	private class TankDriver implements Runnable {

		public void run() {
			while (true) {
				move();
				try {
					Thread.sleep(1);
					listener.tankMoved();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		}
	}

	public void start() {
		new Thread(new TankDriver()).start();
	}
}